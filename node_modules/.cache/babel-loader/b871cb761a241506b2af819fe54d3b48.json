{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jominsu/Documents/GitHub/Joditor/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import styled from\"@emotion/styled\";import Title1 from\"./Tags/Title1\";import Title2 from\"./Tags/Title2\";import Title3 from\"./Tags/Title3\";import Hyperlink from\"./Tags/Hyperlink\";import Code from\"./Tags/Code\";import CallOut from\"./Tags/CallOut\";import useWrite from\"lib/write/useWrite\";import{backgroundColor}from\"lib/style/color\";import{jsx as _jsx}from\"react/jsx-runtime\";var TagList=function TagList(){var _useWrite=useWrite(),_useWrite$WriteEditor=_useWrite.WriteEditorState,searchWord=_useWrite$WriteEditor.searchWord,tagBoxFocusIdx=_useWrite$WriteEditor.tagBoxFocusIdx;var data=[{word:\"/제목1\",Tag:Title1},{word:\"/제목2\",Tag:Title2},{word:\"/제목3\",Tag:Title3},{word:\"/하이퍼링크\",Tag:Hyperlink},{word:\"/코드\",Tag:Code},{word:\"/콜아웃\",Tag:CallOut}];var search=function search(){return searchWord?data.map(function(_ref,key){var word=_ref.word,Tag=_ref.Tag;return word.includes(searchWord)&&/*#__PURE__*/_jsx(\"div\",{style:key===tagBoxFocusIdx?{background:backgroundColor}:{},children:/*#__PURE__*/_jsx(Tag,{},key)},key);}):data.map(function(_ref2,key){var Tag=_ref2.Tag;return/*#__PURE__*/_jsx(\"div\",{style:key===tagBoxFocusIdx?{background:backgroundColor}:{},children:/*#__PURE__*/_jsx(Tag,{},key)},key);});};return/*#__PURE__*/_jsx(TagListContainer,{children:search()});};var TagListContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"])));export default TagList;","map":{"version":3,"sources":["/Users/jominsu/Documents/GitHub/Joditor/src/lib/components/Write/WriteEditor/EditorInputter/TagBox/TagList/TagList.tsx"],"names":["styled","Title1","Title2","Title3","Hyperlink","Code","CallOut","useWrite","backgroundColor","TagList","WriteEditorState","searchWord","tagBoxFocusIdx","data","word","Tag","search","map","key","includes","background","TagListContainer","div"],"mappings":"iKAAA,MAAOA,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,oBAArB,CACA,OAASC,eAAT,KAAgC,iBAAhC,C,2CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,cAEIF,QAAQ,EAFZ,iCACEG,gBADF,CACsBC,UADtB,uBACsBA,UADtB,CACkCC,cADlC,uBACkCA,cADlC,CAGA,GAAMC,CAAAA,IAAI,CAAG,CACX,CAAEC,IAAI,CAAE,MAAR,CAAgBC,GAAG,CAAEd,MAArB,CADW,CAEX,CAAEa,IAAI,CAAE,MAAR,CAAgBC,GAAG,CAAEb,MAArB,CAFW,CAGX,CAAEY,IAAI,CAAE,MAAR,CAAgBC,GAAG,CAAEZ,MAArB,CAHW,CAIX,CAAEW,IAAI,CAAE,QAAR,CAAkBC,GAAG,CAAEX,SAAvB,CAJW,CAKX,CAAEU,IAAI,CAAE,KAAR,CAAeC,GAAG,CAAEV,IAApB,CALW,CAMX,CAAES,IAAI,CAAE,MAAR,CAAgBC,GAAG,CAAET,OAArB,CANW,CAAb,CAQA,GAAMU,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,MAAOL,CAAAA,UAAU,CACbE,IAAI,CAACI,GAAL,CACE,cAAgBC,GAAhB,KAAGJ,CAAAA,IAAH,MAAGA,IAAH,CAASC,GAAT,MAASA,GAAT,OACED,CAAAA,IAAI,CAACK,QAAL,CAAcR,UAAd,gBACE,YAEE,KAAK,CACHO,GAAG,GAAKN,cAAR,CAAyB,CAAEQ,UAAU,CAAEZ,eAAd,CAAzB,CAA2D,EAH/D,uBAME,KAAC,GAAD,IAAUU,GAAV,CANF,EACOA,GADP,CAFJ,EADF,CADa,CAcbL,IAAI,CAACI,GAAL,CAAS,eAAUC,GAAV,KAAGH,CAAAA,GAAH,OAAGA,GAAH,oBACP,YAEE,KAAK,CACHG,GAAG,GAAKN,cAAR,CAAyB,CAAEQ,UAAU,CAAEZ,eAAd,CAAzB,CAA2D,EAH/D,uBAME,KAAC,GAAD,IAAUU,GAAV,CANF,EACOA,GADP,CADO,EAAT,CAdJ,CAwBD,CAzBD,CA2BA,mBAAO,KAAC,gBAAD,WAAmBF,MAAM,EAAzB,EAAP,CACD,CAxCD,CA0CA,GAAMK,CAAAA,gBAAgB,CAAGrB,MAAM,CAACsB,GAAV,gHAAtB,CAKA,cAAeb,CAAAA,OAAf","sourcesContent":["import styled from \"@emotion/styled\";\nimport Title1 from \"./Tags/Title1\";\nimport Title2 from \"./Tags/Title2\";\nimport Title3 from \"./Tags/Title3\";\nimport Hyperlink from \"./Tags/Hyperlink\";\nimport Code from \"./Tags/Code\";\nimport CallOut from \"./Tags/CallOut\";\nimport useWrite from \"lib/write/useWrite\";\nimport { backgroundColor } from \"lib/style/color\";\n\nconst TagList = () => {\n  const {\n    WriteEditorState: { searchWord, tagBoxFocusIdx },\n  } = useWrite();\n  const data = [\n    { word: \"/제목1\", Tag: Title1 },\n    { word: \"/제목2\", Tag: Title2 },\n    { word: \"/제목3\", Tag: Title3 },\n    { word: \"/하이퍼링크\", Tag: Hyperlink },\n    { word: \"/코드\", Tag: Code },\n    { word: \"/콜아웃\", Tag: CallOut },\n  ];\n  const search = () => {\n    return searchWord\n      ? data.map(\n          ({ word, Tag }, key) =>\n            word.includes(searchWord) && (\n              <div\n                key={key}\n                style={\n                  key === tagBoxFocusIdx ? { background: backgroundColor } : {}\n                }\n              >\n                <Tag key={key} />\n              </div>\n            )\n        )\n      : data.map(({ Tag }, key) => (\n          <div\n            key={key}\n            style={\n              key === tagBoxFocusIdx ? { background: backgroundColor } : {}\n            }\n          >\n            <Tag key={key} />\n          </div>\n        ));\n  };\n\n  return <TagListContainer>{search()}</TagListContainer>;\n};\n\nconst TagListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default TagList;\n"]},"metadata":{},"sourceType":"module"}