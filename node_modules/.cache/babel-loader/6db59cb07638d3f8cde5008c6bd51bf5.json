{"ast":null,"code":"var _jsxFileName = \"/Users/jominsu/Documents/GitHub/Joditor/src/components/Write/WriteEditor/EditorList/EditorList.tsx\",\n    _s = $RefreshSig$();\n\nimport useWrite from \"hooks/write\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport EditorItem from \"./EditorItem/EditorItem\";\nimport styled from \"@emotion/styled\";\nimport Submit from \"./Submit/Submit\";\nimport CancelButton from \"./Submit/Buttons/CancelButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditorList = () => {\n  _s();\n\n  const {\n    WriteEditorState: {\n      body,\n      head\n    },\n    dropLine\n  } = useWrite();\n  const dom = [];\n  let next;\n  let snext;\n  body.map((_, key) => {\n    next = snext;\n\n    if (key === 0) {\n      next = body[head].next;\n      snext = next;\n      dom.push(body[head]);\n    }\n\n    if (next !== null) {\n      snext = body[next].next;\n      dom.push(body[next]);\n    } else {\n      return null;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => {\n        var _result$destination, _result$destination2;\n\n        if (!result.destination) return;\n        console.log(result.destination.index, dom);\n        dropLine(result.source.index, (_result$destination = result.destination) === null || _result$destination === void 0 ? void 0 : _result$destination.index, +result.draggableId, dom[(_result$destination2 = result.destination) === null || _result$destination2 === void 0 ? void 0 : _result$destination2.index].id);\n      },\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable\",\n        children: provided => /*#__PURE__*/_jsxDEV(EditorListContainer, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [dom.map((line, key) => /*#__PURE__*/_jsxDEV(EditorItem, {\n            line: line,\n            index: key\n          }, line.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(Submit, {\n        dom: dom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CancelButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditorList, \"FPgLmSY3IRhWkY4KMmEIR4VQZCI=\", false, function () {\n  return [useWrite];\n});\n\n_c = EditorList;\nconst EditorListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n`;\n_c2 = EditorListContainer;\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n_c3 = Buttons;\nexport default EditorList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditorList\");\n$RefreshReg$(_c2, \"EditorListContainer\");\n$RefreshReg$(_c3, \"Buttons\");","map":{"version":3,"sources":["/Users/jominsu/Documents/GitHub/Joditor/src/components/Write/WriteEditor/EditorList/EditorList.tsx"],"names":["useWrite","DragDropContext","Droppable","EditorItem","styled","Submit","CancelButton","EditorList","WriteEditorState","body","head","dropLine","dom","next","snext","map","_","key","push","result","destination","console","log","index","source","draggableId","id","provided","innerRef","droppableProps","line","placeholder","EditorListContainer","div","Buttons"],"mappings":"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","sourcesContent":["import useWrite from \"hooks/write\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport EditorItem from \"./EditorItem/EditorItem\";\nimport { line } from \"Store/WriteEditorStore/type\";\nimport styled from \"@emotion/styled\";\nimport Submit from \"./Submit/Submit\";\nimport CancelButton from \"./Submit/Buttons/CancelButton\";\n\nconst EditorList = () => {\n  const {\n    WriteEditorState: { body, head },\n    dropLine,\n  } = useWrite();\n  const dom: any[] = [];\n\n  let next: number | null;\n  let snext: number | null;\n\n  body.map((_, key: number) => {\n    next = snext;\n    if (key === 0) {\n      next = body[head].next;\n      snext = next;\n      dom.push(body[head]);\n    }\n    if (next !== null) {\n      snext = body[next].next;\n      dom.push(body[next]);\n    } else {\n      return null;\n    }\n  });\n\n  return (\n    <>\n      <DragDropContext\n        onDragEnd={(result) => {\n          if (!result.destination) return;\n          console.log(result.destination.index, dom);\n          dropLine(\n            result.source.index,\n            result.destination?.index,\n            +result.draggableId,\n            dom[result.destination?.index].id\n          );\n        }}\n      >\n        <Droppable droppableId=\"droppable\">\n          {(provided) => (\n            <EditorListContainer\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {dom.map((line: line, key: number) => (\n                <EditorItem key={line.id} line={line} index={key} />\n              ))}\n              {provided.placeholder}\n            </EditorListContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Buttons>\n        <Submit dom={dom} />\n        <CancelButton />\n      </Buttons>\n    </>\n  );\n};\n\nconst EditorListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport default EditorList;\n"]},"metadata":{},"sourceType":"module"}