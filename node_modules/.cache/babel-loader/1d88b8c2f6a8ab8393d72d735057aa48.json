{"ast":null,"code":"var _jsxFileName = \"/Users/jominsu/Documents/GitHub/Joditor/src/lib/components/common/Buttons/DefaultButton.tsx\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { buttonBackgroundColor, buttonTextColor } from \"lib/style/color\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst DefaultButton = _ref => {\n  let {\n    children,\n    onClick,\n    isAbled,\n    size\n  } = _ref;\n  const DefaultButtonCss = css`\n    transition: 0.1s all;\n    outline: none;\n    border: 0;\n    cursor: pointer;\n    border-radius: 8px;\n    min-width: ${size === \"L\" && \"104px\" || size === \"M\" && \"91px\" || size === \"S\" && \"78px\"};\n    height: ${size === \"L\" && \"48px\" || size === \"M\" && \"42px\" || size === \"S\" && \"36px\"};\n    padding: 0 16px;\n    background-color: ${isAbled ? buttonBackgroundColor.abled.basic : buttonBackgroundColor.disabled.basic};\n    color: ${isAbled ? buttonTextColor.abled : buttonTextColor.disabled};\n    font-size: 18px;\n    &:hover {\n      background-color: ${isAbled ? buttonBackgroundColor.abled.hover : buttonBackgroundColor.disabled.hover};\n    }\n    &:active {\n      background-color: ${isAbled ? buttonBackgroundColor.abled.active : buttonBackgroundColor.disabled.active};\n    }\n  `;\n  return _jsxDEV(\"button\", {\n    css: DefaultButtonCss,\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DefaultButton;\nexport default DefaultButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DefaultButton\");","map":{"version":3,"sources":["/Users/jominsu/Documents/GitHub/Joditor/src/lib/components/common/Buttons/DefaultButton.tsx"],"names":["css","buttonBackgroundColor","buttonTextColor","DefaultButton","children","onClick","isAbled","size","DefaultButtonCss","abled","basic","disabled","hover","active"],"mappings":";;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AAEA,SAASC,qBAAT,EAAgCC,eAAhC,QAAuD,iBAAvD;;;AASA,MAAMC,aAAa,GAAG,QAKA;AAAA,MALC;AACrBC,IAAAA,QADqB;AAErBC,IAAAA,OAFqB;AAGrBC,IAAAA,OAHqB;AAIrBC,IAAAA;AAJqB,GAKD;AACpB,QAAMC,gBAAgB,GAAGR,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,iBAAkBO,IAAI,KAAK,GAAT,IAAgB,OAAjB,IACZA,IAAI,KAAK,GAAT,IAAgB,MADJ,IAEZA,IAAI,KAAK,GAAT,IAAgB,MAAQ;AAC7B,cAAeA,IAAI,KAAK,GAAT,IAAgB,MAAjB,IACTA,IAAI,KAAK,GAAT,IAAgB,MADP,IAETA,IAAI,KAAK,GAAT,IAAgB,MAAQ;AAC7B;AACA,wBAAwBD,OAAO,GACvBL,qBAAqB,CAACQ,KAAtB,CAA4BC,KADL,GAEvBT,qBAAqB,CAACU,QAAtB,CAA+BD,KAAM;AAC7C,aAAaJ,OAAO,GAAGJ,eAAe,CAACO,KAAnB,GAA2BP,eAAe,CAACS,QAAS;AACxE;AACA;AACA,0BAA0BL,OAAO,GACvBL,qBAAqB,CAACQ,KAAtB,CAA4BG,KADL,GAEvBX,qBAAqB,CAACU,QAAtB,CAA+BC,KAAM;AAC/C;AACA;AACA,0BAA0BN,OAAO,GACvBL,qBAAqB,CAACQ,KAAtB,CAA4BI,MADL,GAEvBZ,qBAAqB,CAACU,QAAtB,CAA+BE,MAAO;AAChD;AACA,GA5BE;AA8BA,SACE;AAAQ,IAAA,GAAG,EAAEL,gBAAb;AAA+B,IAAA,OAAO,EAAEH,OAAxC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzCD;;KAAMD,a;AA2CN,eAAeA,aAAf","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\n\nimport { buttonBackgroundColor, buttonTextColor } from \"lib/style/color\";\n\ninterface IDefaultButton {\n  onClick?: () => any;\n  isAbled: boolean;\n  children: JSX.Element;\n  size: string;\n}\n\nconst DefaultButton = ({\n  children,\n  onClick,\n  isAbled,\n  size,\n}: IDefaultButton) => {\n  const DefaultButtonCss = css`\n    transition: 0.1s all;\n    outline: none;\n    border: 0;\n    cursor: pointer;\n    border-radius: 8px;\n    min-width: ${(size === \"L\" && \"104px\") ||\n    (size === \"M\" && \"91px\") ||\n    (size === \"S\" && \"78px\")};\n    height: ${(size === \"L\" && \"48px\") ||\n    (size === \"M\" && \"42px\") ||\n    (size === \"S\" && \"36px\")};\n    padding: 0 16px;\n    background-color: ${isAbled\n      ? buttonBackgroundColor.abled.basic\n      : buttonBackgroundColor.disabled.basic};\n    color: ${isAbled ? buttonTextColor.abled : buttonTextColor.disabled};\n    font-size: 18px;\n    &:hover {\n      background-color: ${isAbled\n        ? buttonBackgroundColor.abled.hover\n        : buttonBackgroundColor.disabled.hover};\n    }\n    &:active {\n      background-color: ${isAbled\n        ? buttonBackgroundColor.abled.active\n        : buttonBackgroundColor.disabled.active};\n    }\n  `;\n\n  return (\n    <button css={DefaultButtonCss} onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default DefaultButton;\n"]},"metadata":{},"sourceType":"module"}