{"ast":null,"code":"var _jsxFileName = \"/Users/jominsu/Documents/GitHub/Joditor/src/lib/components/Write/WriteEditor/EditorInputter/EditorInputtor.tsx\",\n    _s = $RefreshSig$();\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport styled from \"@emotion/styled\";\nimport useWrite from \"lib/write\";\nimport { useEffect } from \"react\";\nimport ReactTextareaAutosize from \"react-textarea-autosize\";\nimport TagBox from \"./TagBox\";\nimport useEditorInputter from \"./useEditorInputter\";\nimport tag from \"assets/png/tag.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditorInputter = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    WriteEditorState\n  } = useWrite();\n  useEffect(() => {\n    if (data.id === WriteEditorState.focusLine && inputterRef.current) {\n      inputterRef.current.setSelectionRange(9999, 9999);\n      inputterRef.current.focus();\n    }\n  }, [WriteEditorState.focusLine, data.id]);\n  const {\n    onChangeText,\n    clickTagButton,\n    onKeyPressEnter,\n    onKeyDownArrowUp,\n    onKeyDownArrowDown,\n    onKeyDownSpace,\n    onKeyDownTab,\n    onKeyDownBackspace,\n    onKeyDownZ,\n    onDropUrl,\n    onBlur,\n    dragOver,\n    dragLeave,\n    onPasteImg,\n    click,\n    inputterRef,\n    text,\n    drogOver\n  } = useEditorInputter(data);\n  return /*#__PURE__*/_jsxDEV(EditorInputterLine, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: tag,\n      alt: \"\",\n      width: 12,\n      height: 18,\n      onClick: () => clickTagButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactTextareaAutosize, {\n      placeholder: data.id === WriteEditorState.focusLine ? `명령어 사용시 \"/\"를 입력하세요` : \"\",\n      spellCheck: false // cacheMeasurements\n      ,\n      style: drogOver ? {\n        borderBottom: \"5px solid #c4e3f0\"\n      } : {},\n      onKeyDown: e => {\n        switch (e.code) {\n          case \"Space\":\n            onKeyDownSpace();\n            break;\n\n          case \"ArrowUp\":\n            onKeyDownArrowUp(e);\n            break;\n\n          case \"ArrowDown\":\n            onKeyDownArrowDown(e);\n            break;\n\n          case \"Tab\":\n            onKeyDownTab(e);\n            break;\n\n          case \"Backspace\":\n            onKeyDownBackspace();\n            break;\n\n          case \"KeyZ\":\n            onKeyDownZ(e);\n            break;\n        }\n      },\n      onDrop: onDropUrl,\n      onDragOver: () => {\n        dragOver();\n      },\n      onDragLeave: () => {\n        dragLeave();\n      },\n      className: \"content\",\n      value: text,\n      ref: inputterRef,\n      disabled: false,\n      onPaste: onPasteImg,\n      onKeyPress: onKeyPressEnter,\n      onClick: () => {\n        click();\n      },\n      onChange: e => onChangeText(e, data.id),\n      onBlur: onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), data.tag === \"code\" && /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      showLineNumbers: true,\n      onClick: () => click(),\n      language: \"javascript\",\n      style: docco,\n      wrapLongLines: true,\n      lineProps: {\n        style: {\n          wordBreak: \"break-all\",\n          whiteSpace: \"pre-wrap\"\n        }\n      },\n      customStyle: {\n        width: \"100%\",\n        cursor: \"text\",\n        height: \"100%\"\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), data.id === WriteEditorState.tagBoxId && data.id === WriteEditorState.focusLine && /*#__PURE__*/_jsxDEV(TagBox, {\n      inputterRef: inputterRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditorInputter, \"0fPR0Ux7vTu16M0PWmWe/yCvJ7o=\", false, function () {\n  return [useWrite, useEditorInputter];\n});\n\n_c = EditorInputter;\nconst EditorInputterLine = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  & > textarea {\n    background-color: rgba(0, 0, 0, 0);\n  }\n  &:hover {\n    & > img {\n      opacity: 1;\n    }\n  }\n  & > img {\n    opacity: 0;\n    transition: 0.2s;\n  }\n`;\n_c2 = EditorInputterLine;\nexport default EditorInputter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditorInputter\");\n$RefreshReg$(_c2, \"EditorInputterLine\");","map":{"version":3,"sources":["/Users/jominsu/Documents/GitHub/Joditor/src/lib/components/Write/WriteEditor/EditorInputter/EditorInputtor.tsx"],"names":["SyntaxHighlighter","docco","styled","useWrite","useEffect","ReactTextareaAutosize","TagBox","useEditorInputter","tag","EditorInputter","data","WriteEditorState","id","focusLine","inputterRef","current","setSelectionRange","focus","onChangeText","clickTagButton","onKeyPressEnter","onKeyDownArrowUp","onKeyDownArrowDown","onKeyDownSpace","onKeyDownTab","onKeyDownBackspace","onKeyDownZ","onDropUrl","onBlur","dragOver","dragLeave","onPasteImg","click","text","drogOver","borderBottom","e","code","style","wordBreak","whiteSpace","width","cursor","height","tagBoxId","EditorInputterLine","div"],"mappings":"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","sourcesContent":["import SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport styled from \"@emotion/styled\";\nimport useWrite from \"lib/write\";\nimport { useEffect } from \"react\";\nimport ReactTextareaAutosize from \"react-textarea-autosize\";\nimport { line } from \"lib/Store/WriteEditorStore/type\";\nimport TagBox from \"./TagBox\";\nimport useEditorInputter from \"./useEditorInputter\";\nimport tag from \"assets/png/tag.png\";\n\nconst EditorInputter = ({ data }: { data: line }) => {\n  const { WriteEditorState } = useWrite();\n\n  useEffect(() => {\n    if (data.id === WriteEditorState.focusLine && inputterRef.current) {\n      inputterRef.current.setSelectionRange(9999, 9999);\n      inputterRef.current.focus();\n    }\n  }, [WriteEditorState.focusLine, data.id]);\n\n  const {\n    onChangeText,\n    clickTagButton,\n    onKeyPressEnter,\n    onKeyDownArrowUp,\n    onKeyDownArrowDown,\n    onKeyDownSpace,\n    onKeyDownTab,\n    onKeyDownBackspace,\n    onKeyDownZ,\n    onDropUrl,\n    onBlur,\n    dragOver,\n    dragLeave,\n    onPasteImg,\n    click,\n    inputterRef,\n    text,\n    drogOver,\n  } = useEditorInputter(data);\n\n  return (\n    <EditorInputterLine>\n      <img\n        src={tag}\n        alt=\"\"\n        width={12}\n        height={18}\n        onClick={() => clickTagButton()}\n      />\n      <ReactTextareaAutosize\n        placeholder={\n          data.id === WriteEditorState.focusLine\n            ? `명령어 사용시 \"/\"를 입력하세요`\n            : \"\"\n        }\n        spellCheck={false}\n        // cacheMeasurements\n        style={drogOver ? { borderBottom: \"5px solid #c4e3f0\" } : {}}\n        onKeyDown={(e) => {\n          switch (e.code) {\n            case \"Space\":\n              onKeyDownSpace();\n              break;\n            case \"ArrowUp\":\n              onKeyDownArrowUp(e);\n              break;\n            case \"ArrowDown\":\n              onKeyDownArrowDown(e);\n              break;\n            case \"Tab\":\n              onKeyDownTab(e);\n              break;\n            case \"Backspace\":\n              onKeyDownBackspace();\n              break;\n            case \"KeyZ\":\n              onKeyDownZ(e);\n              break;\n          }\n        }}\n        onDrop={onDropUrl}\n        onDragOver={() => {\n          dragOver();\n        }}\n        onDragLeave={() => {\n          dragLeave();\n        }}\n        className=\"content\"\n        value={text}\n        ref={inputterRef}\n        disabled={false}\n        onPaste={onPasteImg}\n        onKeyPress={onKeyPressEnter}\n        onClick={() => {\n          click();\n        }}\n        onChange={(e) => onChangeText(e, data.id)}\n        onBlur={onBlur}\n      />\n      {data.tag === \"code\" && (\n        <SyntaxHighlighter\n          showLineNumbers\n          onClick={() => click()}\n          language=\"javascript\"\n          style={docco}\n          wrapLongLines\n          lineProps={{\n            style: { wordBreak: \"break-all\", whiteSpace: \"pre-wrap\" },\n          }}\n          customStyle={{ width: \"100%\", cursor: \"text\", height: \"100%\" }}\n        >\n          {text}\n        </SyntaxHighlighter>\n      )}\n      {data.id === WriteEditorState.tagBoxId &&\n        data.id === WriteEditorState.focusLine && (\n          <TagBox inputterRef={inputterRef} />\n        )}\n    </EditorInputterLine>\n  );\n};\n\nconst EditorInputterLine = styled.div`\n  display: flex;\n  position: relative;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  & > textarea {\n    background-color: rgba(0, 0, 0, 0);\n  }\n  &:hover {\n    & > img {\n      opacity: 1;\n    }\n  }\n  & > img {\n    opacity: 0;\n    transition: 0.2s;\n  }\n`;\n\nexport default EditorInputter;\n"]},"metadata":{},"sourceType":"module"}