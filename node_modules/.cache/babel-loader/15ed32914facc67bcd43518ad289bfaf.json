{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useWrite from \"hooks/write\";\nimport { useCallback, useRef, useState } from \"react\";\nimport useTags from \"./TagBox/TagList/Tags/useTags\";\n\nconst useEditorInputter = data => {\n  _s();\n\n  const [text, setText] = useState(data.text);\n  const [drogOver, setDrogOver] = useState(false);\n  const inputterRef = useRef(null);\n  const spaceFlag = useRef(false);\n  const {\n    setLineText,\n    focusNextLine,\n    focusPrevLine,\n    setTag2Ul,\n    removeLine,\n    removeLineOnly,\n    setTag2A,\n    redo,\n    undo,\n    dropImg,\n    setImg,\n    searchTag,\n    enterInputter,\n    clickInputter,\n    openTagBox,\n    closeTagBox,\n    focusNextTag,\n    focusPrevTag,\n    focusSetUpTag,\n    WriteEditorState\n  } = useWrite();\n  const {\n    selectTagId\n  } = useTags();\n\n  const onChangeText = (e, id) => {\n    if (e.target.value.startsWith(\"/\")) {\n      openTagBox(id);\n      searchTag(e.target.value.substring(1));\n    } else if (WriteEditorState.tagBoxId) closeTagBox();\n\n    setText(e.target.value);\n  };\n\n  const clickTagButton = () => {\n    click();\n    WriteEditorState.tagBoxId !== null ? closeTagBox() : openTagBox(data.id);\n  };\n\n  const onKeyPressEnter = useCallback(e => {\n    if (e.key === \"Enter\" && e.shiftKey === false) {\n      if (WriteEditorState.tagBoxFocusIdx !== null) {\n        selectTagId();\n        focusSetUpTag();\n      } else {\n        setLineText(text, data.id);\n        enterInputter(data.id, data.next);\n      }\n\n      e.preventDefault();\n    }\n  }, [data.id, data.next, enterInputter, selectTagId, WriteEditorState.tagBoxFocusIdx, focusSetUpTag, setLineText, text]);\n  const onKeyDownArrowUp = useCallback(e => {\n    e.preventDefault();\n\n    if (inputterRef.current && !e.nativeEvent.isComposing) {\n      if (WriteEditorState.tagBoxId !== null) {\n        focusPrevTag();\n        console.log(WriteEditorState.tagBoxId);\n      } else focusPrevLine(data.id, inputterRef.current.selectionEnd);\n    }\n  }, [data.id, focusPrevLine, focusPrevTag, WriteEditorState.tagBoxId]);\n  const onKeyDownArrowDown = useCallback(e => {\n    e.preventDefault();\n\n    if (inputterRef.current && !e.nativeEvent.isComposing) {\n      if (WriteEditorState.tagBoxId !== null) {\n        focusNextTag();\n      } else focusNextLine(data.id, inputterRef.current.selectionEnd);\n    }\n  }, [data.id, focusNextLine, focusNextTag, WriteEditorState.tagBoxId]);\n  const onKeyDownSpace = useCallback(() => {\n    if (inputterRef.current) {\n      setLineText(text, data.id, inputterRef.current.selectionEnd);\n      spaceFlag.current = true;\n    }\n  }, [data.id, setLineText, text]);\n  const onKeyDownTab = useCallback(e => {\n    e.preventDefault();\n\n    if (data.tag !== \"ul\") {\n      inputterRef.current && setTag2Ul(data.id, inputterRef.current.selectionEnd);\n    }\n  }, [data.id, data.tag, setTag2Ul]);\n  const onKeyDownBackspace = useCallback(() => {\n    if (data.next !== null || WriteEditorState.head !== data.id) {\n      if (text.length === 0) removeLine(data.id, data.next, data.prev);else if (inputterRef.current && inputterRef.current.selectionEnd + inputterRef.current.selectionStart === 0) {\n        removeLineOnly(data.id, data.next, data.prev);\n      } else {\n        spaceFlag.current && setLineText(text, data.id);\n        spaceFlag.current = false;\n      }\n    }\n  }, [data.id, data.next, data.prev, removeLine, removeLineOnly, setLineText, WriteEditorState.head, text]);\n  const onKeyDownZ = useCallback(e => {\n    if (e.metaKey === true || e.ctrlKey === true) {\n      if (!e.nativeEvent.isComposing) {\n        e.preventDefault();\n\n        if (e.shiftKey === true) {\n          redo();\n        } else {\n          text !== data.text && setLineText(text, data.id);\n          undo();\n        }\n      }\n    }\n  }, [data.text, data.id, redo, undo, text, setLineText]);\n  const onDropUrl = useCallback(e => {\n    e.preventDefault();\n    setDrogOver(false);\n\n    if (e.dataTransfer.files[0] !== undefined) {// dropImg(data.id, URL.createObjectURL(e.dataTransfer.files[0]), true);\n    } else if (e.dataTransfer.getData(\"url\") !== undefined) {\n      console.log(e.dataTransfer.types, e.dataTransfer.getData(\"url\")); // dropImg(data.id, e.dataTransfer.getData(\"url\"), true);\n    }\n  }, [data.id]);\n  const onBlur = useCallback(e => {\n    if (text !== data.text) setLineText(text, data.id);\n\n    if (!(WriteEditorState.tagBoxId === null) && e.currentTarget.nextSibling) {\n      !e.currentTarget.nextSibling.contains(e.relatedTarget) && closeTagBox();\n    }\n  }, [data.text, data.id, text, WriteEditorState.tagBoxId]);\n  const dragOver = useCallback(() => {\n    setDrogOver(true);\n  }, []);\n  const dragLeave = useCallback(() => {\n    setDrogOver(false);\n  }, []);\n  const onPasteImg = useCallback(e => {\n    e.clipboardData.items[0] && e.clipboardData.items[0].getAsString(string => {\n      if (string.startsWith(\"http\")) {\n        setLineText(string, data.id);\n        setTag2A(data.id);\n      }\n    }); // e.clipboardData.files[0] &&\n    //   setImg(data.id, URL.createObjectURL(e.clipboardData.files[0]));\n  }, [data.id, setLineText, setTag2A]);\n  const click = useCallback(() => {\n    clickInputter(data.id);\n  }, [data.id]);\n  return {\n    onChangeText,\n    clickTagButton,\n    onKeyPressEnter,\n    onKeyDownArrowUp,\n    onKeyDownArrowDown,\n    onKeyDownSpace,\n    onKeyDownTab,\n    onKeyDownBackspace,\n    onKeyDownZ,\n    onDropUrl,\n    onBlur,\n    dragOver,\n    dragLeave,\n    onPasteImg,\n    click,\n    inputterRef,\n    text,\n    drogOver\n  };\n};\n\n_s(useEditorInputter, \"uK21lsgP755fp6s6QCjorn4yH78=\", false, function () {\n  return [useWrite, useTags];\n});\n\nexport default useEditorInputter;","map":{"version":3,"sources":["/Users/jominsu/Documents/GitHub/Joditor/src/components/Write/WriteEditor/EditorInputter/useEditorInputter.ts"],"names":["useWrite","useCallback","useRef","useState","useTags","useEditorInputter","data","text","setText","drogOver","setDrogOver","inputterRef","spaceFlag","setLineText","focusNextLine","focusPrevLine","setTag2Ul","removeLine","removeLineOnly","setTag2A","redo","undo","dropImg","setImg","searchTag","enterInputter","clickInputter","openTagBox","closeTagBox","focusNextTag","focusPrevTag","focusSetUpTag","WriteEditorState","selectTagId","onChangeText","e","id","target","value","startsWith","substring","tagBoxId","clickTagButton","click","onKeyPressEnter","key","shiftKey","tagBoxFocusIdx","next","preventDefault","onKeyDownArrowUp","current","nativeEvent","isComposing","console","log","selectionEnd","onKeyDownArrowDown","onKeyDownSpace","onKeyDownTab","tag","onKeyDownBackspace","head","length","prev","selectionStart","onKeyDownZ","metaKey","ctrlKey","onDropUrl","dataTransfer","files","undefined","getData","types","onBlur","currentTarget","nextSibling","contains","relatedTarget","dragOver","dragLeave","onPasteImg","clipboardData","items","getAsString","string"],"mappings":"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","sourcesContent":["import useWrite from \"hooks/write\";\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { line } from \"Store/WriteEditorStore/type\";\nimport useTags from \"./TagBox/TagList/Tags/useTags\";\n\nconst useEditorInputter = (data: line) => {\n  const [text, setText] = useState(data.text);\n  const [drogOver, setDrogOver] = useState(false);\n\n  const inputterRef = useRef<HTMLTextAreaElement>(null);\n  const spaceFlag = useRef<boolean>(false);\n\n  const {\n    setLineText,\n    focusNextLine,\n    focusPrevLine,\n    setTag2Ul,\n    removeLine,\n    removeLineOnly,\n    setTag2A,\n    redo,\n    undo,\n    dropImg,\n    setImg,\n    searchTag,\n    enterInputter,\n    clickInputter,\n    openTagBox,\n    closeTagBox,\n    focusNextTag,\n    focusPrevTag,\n    focusSetUpTag,\n    WriteEditorState,\n  } = useWrite();\n  const { selectTagId } = useTags();\n\n  const onChangeText = (\n    e: React.ChangeEvent<HTMLTextAreaElement>,\n    id: number\n  ) => {\n    if (e.target.value.startsWith(\"/\")) {\n      openTagBox(id);\n      searchTag(e.target.value.substring(1));\n    } else if (WriteEditorState.tagBoxId) closeTagBox();\n    setText(e.target.value);\n  };\n\n  const clickTagButton = () => {\n    click();\n    WriteEditorState.tagBoxId !== null ? closeTagBox() : openTagBox(data.id);\n  };\n\n  const onKeyPressEnter = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (e.key === \"Enter\" && e.shiftKey === false) {\n        if (WriteEditorState.tagBoxFocusIdx !== null) {\n          selectTagId();\n          focusSetUpTag();\n        } else {\n          setLineText(text, data.id);\n          enterInputter(data.id, data.next);\n        }\n        e.preventDefault();\n      }\n    },\n    [\n      data.id,\n      data.next,\n      enterInputter,\n      selectTagId,\n      WriteEditorState.tagBoxFocusIdx,\n      focusSetUpTag,\n      setLineText,\n      text,\n    ]\n  );\n\n  const onKeyDownArrowUp = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      e.preventDefault();\n      if (inputterRef.current && !e.nativeEvent.isComposing) {\n        if (WriteEditorState.tagBoxId !== null) {\n          focusPrevTag();\n          console.log(WriteEditorState.tagBoxId);\n        } else focusPrevLine(data.id, inputterRef.current.selectionEnd);\n      }\n    },\n    [data.id, focusPrevLine, focusPrevTag, WriteEditorState.tagBoxId]\n  );\n\n  const onKeyDownArrowDown = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      e.preventDefault();\n      if (inputterRef.current && !e.nativeEvent.isComposing) {\n        if (WriteEditorState.tagBoxId !== null) {\n          focusNextTag();\n        } else focusNextLine(data.id, inputterRef.current.selectionEnd);\n      }\n    },\n    [data.id, focusNextLine, focusNextTag, WriteEditorState.tagBoxId]\n  );\n\n  const onKeyDownSpace = useCallback(() => {\n    if (inputterRef.current) {\n      setLineText(text, data.id, inputterRef.current.selectionEnd);\n      spaceFlag.current = true;\n    }\n  }, [data.id, setLineText, text]);\n\n  const onKeyDownTab = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      e.preventDefault();\n      if (data.tag !== \"ul\") {\n        inputterRef.current &&\n          setTag2Ul(data.id, inputterRef.current.selectionEnd);\n      }\n    },\n    [data.id, data.tag, setTag2Ul]\n  );\n\n  const onKeyDownBackspace = useCallback(() => {\n    if (data.next !== null || WriteEditorState.head !== data.id) {\n      if (text.length === 0) removeLine(data.id, data.next, data.prev);\n      else if (\n        inputterRef.current &&\n        inputterRef.current.selectionEnd +\n          inputterRef.current.selectionStart ===\n          0\n      ) {\n        removeLineOnly(data.id, data.next, data.prev);\n      } else {\n        spaceFlag.current && setLineText(text, data.id);\n        spaceFlag.current = false;\n      }\n    }\n  }, [\n    data.id,\n    data.next,\n    data.prev,\n    removeLine,\n    removeLineOnly,\n    setLineText,\n    WriteEditorState.head,\n    text,\n  ]);\n\n  const onKeyDownZ = useCallback(\n    (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n      if (e.metaKey === true || e.ctrlKey === true) {\n        if (!e.nativeEvent.isComposing) {\n          e.preventDefault();\n          if (e.shiftKey === true) {\n            redo();\n          } else {\n            text !== data.text && setLineText(text, data.id);\n            undo();\n          }\n        }\n      }\n    },\n    [data.text, data.id, redo, undo, text, setLineText]\n  );\n\n  const onDropUrl = useCallback(\n    (e: React.DragEvent<HTMLTextAreaElement>) => {\n      e.preventDefault();\n      setDrogOver(false);\n      if (e.dataTransfer.files[0] !== undefined) {\n        // dropImg(data.id, URL.createObjectURL(e.dataTransfer.files[0]), true);\n      } else if (e.dataTransfer.getData(\"url\") !== undefined) {\n        console.log(e.dataTransfer.types, e.dataTransfer.getData(\"url\"));\n        // dropImg(data.id, e.dataTransfer.getData(\"url\"), true);\n      }\n    },\n    [data.id]\n  );\n\n  const onBlur = useCallback(\n    (e: React.FocusEvent<HTMLTextAreaElement, Element>) => {\n      if (text !== data.text) setLineText(text, data.id);\n      if (\n        !(WriteEditorState.tagBoxId === null) &&\n        e.currentTarget.nextSibling\n      ) {\n        !e.currentTarget.nextSibling.contains(e.relatedTarget) && closeTagBox();\n      }\n    },\n    [data.text, data.id, text, WriteEditorState.tagBoxId]\n  );\n\n  const dragOver = useCallback(() => {\n    setDrogOver(true);\n  }, []);\n\n  const dragLeave = useCallback(() => {\n    setDrogOver(false);\n  }, []);\n\n  const onPasteImg = useCallback(\n    (e: React.ClipboardEvent<HTMLTextAreaElement>) => {\n      e.clipboardData.items[0] &&\n        e.clipboardData.items[0].getAsString((string) => {\n          if (string.startsWith(\"http\")) {\n            setLineText(string, data.id);\n            setTag2A(data.id);\n          }\n        });\n      // e.clipboardData.files[0] &&\n      //   setImg(data.id, URL.createObjectURL(e.clipboardData.files[0]));\n    },\n    [data.id, setLineText, setTag2A]\n  );\n\n  const click = useCallback(() => {\n    clickInputter(data.id);\n  }, [data.id]);\n\n  return {\n    onChangeText,\n    clickTagButton,\n    onKeyPressEnter,\n    onKeyDownArrowUp,\n    onKeyDownArrowDown,\n    onKeyDownSpace,\n    onKeyDownTab,\n    onKeyDownBackspace,\n    onKeyDownZ,\n    onDropUrl,\n    onBlur,\n    dragOver,\n    dragLeave,\n    onPasteImg,\n    click,\n    inputterRef,\n    text,\n    drogOver,\n  };\n};\n\nexport default useEditorInputter;\n"]},"metadata":{},"sourceType":"module"}