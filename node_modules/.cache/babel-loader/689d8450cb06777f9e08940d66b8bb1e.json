{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useWrite from \"hooks/write/useWrite\";\n\nconst useTags = () => {\n  _s();\n\n  const {\n    WriteEditorState: {\n      tagBoxId,\n      tagBoxFocusIdx\n    },\n    setLineText,\n    closeTagBox,\n    setTag2H1,\n    setTag2H2,\n    setTag2H3,\n    setTag2A,\n    setTag2Code,\n    setTag2CallOut\n  } = useWrite();\n\n  const selectTag = setTag => {\n    if (typeof tagBoxId === \"number\") {\n      setTag(tagBoxId);\n      setLineText(\"\", tagBoxId);\n      closeTagBox();\n    }\n  };\n\n  const selectTagId = () => {\n    if (typeof tagBoxId === \"number\") {\n      switch (tagBoxFocusIdx) {\n        case 0:\n          setTag2H1(tagBoxId);\n          break;\n\n        case 1:\n          setTag2H2(tagBoxId);\n          break;\n\n        case 2:\n          setTag2H3(tagBoxId);\n          break;\n\n        case 3:\n          setTag2A(tagBoxId);\n          break;\n\n        case 4:\n          setTag2Code(tagBoxId);\n          break;\n\n        case 5:\n          setTag2CallOut(tagBoxId);\n          break;\n      }\n\n      setLineText(\"\", tagBoxId);\n      closeTagBox();\n    }\n  };\n\n  return {\n    selectTag,\n    selectTagId\n  };\n};\n\n_s(useTags, \"/aNjaNKoO0yEUHvgNeFBRvCZvlw=\", false, function () {\n  return [useWrite];\n});\n\nexport default useTags;","map":{"version":3,"sources":["/Users/jominsu/Documents/GitHub/Joditor/src/components/Write/WriteEditor/EditorInputter/TagBox/TagList/Tags/useTags.ts"],"names":["useWrite","useTags","WriteEditorState","tagBoxId","tagBoxFocusIdx","setLineText","closeTagBox","setTag2H1","setTag2H2","setTag2H3","setTag2A","setTag2Code","setTag2CallOut","selectTag","setTag","selectTagId"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AACJC,IAAAA,gBAAgB,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KADd;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA;AATI,MAUFZ,QAAQ,EAVZ;;AAYA,QAAMa,SAAS,GAAIC,MAAD,IAA+B;AAC/C,QAAI,OAAOX,QAAP,KAAoB,QAAxB,EAAkC;AAChCW,MAAAA,MAAM,CAACX,QAAD,CAAN;AACAE,MAAAA,WAAW,CAAC,EAAD,EAAKF,QAAL,CAAX;AACAG,MAAAA,WAAW;AACZ;AACF,GAND;;AAOA,QAAMS,WAAW,GAAG,MAAM;AACxB,QAAI,OAAOZ,QAAP,KAAoB,QAAxB,EAAkC;AAChC,cAAQC,cAAR;AACE,aAAK,CAAL;AACEG,UAAAA,SAAS,CAACJ,QAAD,CAAT;AACA;;AACF,aAAK,CAAL;AACEK,UAAAA,SAAS,CAACL,QAAD,CAAT;AACA;;AACF,aAAK,CAAL;AACEM,UAAAA,SAAS,CAACN,QAAD,CAAT;AACA;;AACF,aAAK,CAAL;AACEO,UAAAA,QAAQ,CAACP,QAAD,CAAR;AACA;;AACF,aAAK,CAAL;AACEQ,UAAAA,WAAW,CAACR,QAAD,CAAX;AACA;;AACF,aAAK,CAAL;AACES,UAAAA,cAAc,CAACT,QAAD,CAAd;AACA;AAlBJ;;AAoBAE,MAAAA,WAAW,CAAC,EAAD,EAAKF,QAAL,CAAX;AACAG,MAAAA,WAAW;AACZ;AACF,GAzBD;;AA2BA,SAAO;AAAEO,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACD,CAhDD;;GAAMd,O;UAWAD,Q;;;AAuCN,eAAeC,OAAf","sourcesContent":["import useWrite from \"hooks/write/useWrite\";\n\nconst useTags = () => {\n  const {\n    WriteEditorState: { tagBoxId, tagBoxFocusIdx },\n    setLineText,\n    closeTagBox,\n    setTag2H1,\n    setTag2H2,\n    setTag2H3,\n    setTag2A,\n    setTag2Code,\n    setTag2CallOut,\n  } = useWrite();\n\n  const selectTag = (setTag: (any: any) => any) => {\n    if (typeof tagBoxId === \"number\") {\n      setTag(tagBoxId);\n      setLineText(\"\", tagBoxId);\n      closeTagBox();\n    }\n  };\n  const selectTagId = () => {\n    if (typeof tagBoxId === \"number\") {\n      switch (tagBoxFocusIdx) {\n        case 0:\n          setTag2H1(tagBoxId);\n          break;\n        case 1:\n          setTag2H2(tagBoxId);\n          break;\n        case 2:\n          setTag2H3(tagBoxId);\n          break;\n        case 3:\n          setTag2A(tagBoxId);\n          break;\n        case 4:\n          setTag2Code(tagBoxId);\n          break;\n        case 5:\n          setTag2CallOut(tagBoxId);\n          break;\n      }\n      setLineText(\"\", tagBoxId);\n      closeTagBox();\n    }\n  };\n\n  return { selectTag, selectTagId };\n};\n\nexport default useTags;\n"]},"metadata":{},"sourceType":"module"}